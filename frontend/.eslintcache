[{"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/index.js":"1","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/Index.js":"2","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/examples/RegisterPage.js":"3","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/examples/ProfilePage.js":"4","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/examples/LandingPage.js":"5","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Basics.js":"6","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Tabs.js":"7","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Navbars.js":"8","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Pagination.js":"9","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Notifications.js":"10","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Typography.js":"11","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/NucleoIcons.js":"12","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Signup.js":"13","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Examples.js":"14","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Download.js":"15","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/JavaScript.js":"16","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/variables/charts.js":"17","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/components/Navbars/IndexNavbar.js":"18","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/components/Navbars/ExamplesNavbar.js":"19","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/components/Footer/Footer.js":"20","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/components/PageHeader/PageHeader.js":"21","/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/examples/Authenticate.js":"22","/home/ayed/Main/Study/PFE/Projet/frontend/src/index.js":"23","/home/ayed/Main/Study/PFE/Projet/frontend/src/components/Footer/Footer.js":"24","/home/ayed/Main/Study/PFE/Projet/frontend/src/components/NFTCard/NFTCard.jsx":"25","/home/ayed/Main/Study/PFE/Projet/frontend/src/components/User/User.jsx":"26","/home/ayed/Main/Study/PFE/Projet/frontend/src/components/NFTCard/DefCard.jsx":"27","/home/ayed/Main/Study/PFE/Projet/frontend/src/utils/interact.js":"28","/home/ayed/Main/Study/PFE/Projet/frontend/src/utils/pinata.js":"29","/home/ayed/Main/Study/PFE/Projet/frontend/src/utils/ipfs.js":"30","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/MintNFT.js":"31","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/ProfilePage.js":"32","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/LandingPage.js":"33","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/BlockchainSelection.js":"34","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/Authenticate.js":"35","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/AuthenticationForm.js":"36","/home/ayed/Main/Study/PFE/Projet/frontend/src/components/Navbars/MainNavbar.js":"37","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/CreateSmartContract.js":"38"},{"size":1656,"mtime":1607439708000,"results":"39","hashOfConfig":"40"},{"size":392,"mtime":1649149801836,"results":"41","hashOfConfig":"40"},{"size":7837,"mtime":1607439708000,"results":"42","hashOfConfig":"40"},{"size":16835,"mtime":1607439708000,"results":"43","hashOfConfig":"40"},{"size":22224,"mtime":1649155796885,"results":"44","hashOfConfig":"40"},{"size":9790,"mtime":1607439708000,"results":"45","hashOfConfig":"40"},{"size":8415,"mtime":1607439708000,"results":"46","hashOfConfig":"40"},{"size":17509,"mtime":1607439708000,"results":"47","hashOfConfig":"40"},{"size":7228,"mtime":1607439708000,"results":"48","hashOfConfig":"40"},{"size":2517,"mtime":1607439708000,"results":"49","hashOfConfig":"40"},{"size":7740,"mtime":1607439708000,"results":"50","hashOfConfig":"40"},{"size":3660,"mtime":1607439708000,"results":"51","hashOfConfig":"40"},{"size":5638,"mtime":1607439708000,"results":"52","hashOfConfig":"40"},{"size":2135,"mtime":1607439708000,"results":"53","hashOfConfig":"40"},{"size":3754,"mtime":1607439708000,"results":"54","hashOfConfig":"40"},{"size":15646,"mtime":1607439708000,"results":"55","hashOfConfig":"40"},{"size":2991,"mtime":1607439708000,"results":"56","hashOfConfig":"40"},{"size":7355,"mtime":1607439708000,"results":"57","hashOfConfig":"40"},{"size":4954,"mtime":1649153942665,"results":"58","hashOfConfig":"40"},{"size":4179,"mtime":1607439708000,"results":"59","hashOfConfig":"40"},{"size":1452,"mtime":1607439708000,"results":"60","hashOfConfig":"40"},{"size":8167,"mtime":1649163968862,"results":"61","hashOfConfig":"40"},{"size":1024,"mtime":1652361285870,"results":"62","hashOfConfig":"63"},{"size":3084,"mtime":1649420295906,"results":"64","hashOfConfig":"63"},{"size":1587,"mtime":1650531939558,"results":"65","hashOfConfig":"63"},{"size":364,"mtime":1649421461987,"results":"66","hashOfConfig":"63"},{"size":247,"mtime":1649420423362,"results":"67","hashOfConfig":"63"},{"size":2705,"mtime":1649851460482,"results":"68","hashOfConfig":"63"},{"size":979,"mtime":1650355195687,"results":"69","hashOfConfig":"63"},{"size":189,"mtime":1650280225476,"results":"70","hashOfConfig":"63"},{"size":20761,"mtime":1652365745912,"results":"71","hashOfConfig":"63"},{"size":16195,"mtime":1650533934219,"results":"72","hashOfConfig":"63"},{"size":22425,"mtime":1650533934219,"results":"73","hashOfConfig":"63"},{"size":13495,"mtime":1652352338867,"results":"74","hashOfConfig":"63"},{"size":8806,"mtime":1652187396491,"results":"75","hashOfConfig":"63"},{"size":6414,"mtime":1649246116892,"results":"76","hashOfConfig":"63"},{"size":7049,"mtime":1652369817210,"results":"77","hashOfConfig":"63"},{"size":8724,"mtime":1652372326425,"results":"78","hashOfConfig":"63"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"1qjm9t1",{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1x3ls9v",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/index.js",[],["160","161"],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/Index.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/examples/RegisterPage.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/examples/ProfilePage.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/examples/LandingPage.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Basics.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Tabs.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Navbars.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Pagination.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Notifications.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Typography.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/NucleoIcons.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Signup.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Examples.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/Download.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/IndexSections/JavaScript.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/variables/charts.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/components/Navbars/IndexNavbar.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/components/Navbars/ExamplesNavbar.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/components/Footer/Footer.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/components/PageHeader/PageHeader.js",[],"/home/ayed/Downloads/Templates/blk-design-system-react-master/src/views/examples/Authenticate.js",["162","163"],"/home/ayed/Main/Study/PFE/Projet/frontend/src/index.js",[],["164","165"],"/home/ayed/Main/Study/PFE/Projet/frontend/src/components/Footer/Footer.js",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/components/NFTCard/NFTCard.jsx",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/components/User/User.jsx",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/components/NFTCard/DefCard.jsx",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/utils/interact.js",["166","167","168","169"],"// ************** This file is used to interact with our smart contract **************\n// ***********************************************************************************\n\nimport { pinJSONToIPFS } from './pinata.js'; // used later to add metadata when creating an NFT\n\n// --------- Connecting to Alchemy and importing our smart contract ---------\nrequire('dotenv').config();\nconst alchemykey = process.env.REACT_APP_ALCHEMY_KEY;\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemykey);\n\nconst contractABI = require('./contract-abi.json')\nconst contractAddress = \"0x1e8465f02BD7A428d33b4940Cd1053167A1f3110\";\n// ----------------------------------------------------------------------------\n\n// ------------ Calling the Mint function in our smart contract --------------\nexport const mintNFT = async (url, name, description) => {\n    // error handling\n    if (url.trim() == \"\" || (name.trim() == \"\" || description.trim() == \"\")) {\n        return {\n            success: false,\n            status: \"❗Please make sure all fields are completed before minting.\",\n        }\n    }\n\n    // make metadata\n    const metadata = new Object();\n    metadata.name = name;\n    metadata.image = url;\n    metadata.description = description;\n\n    // make pinata call\n    const pinataResponse = await pinJSONToIPFS(metadata);\n    if (!pinataResponse.success) {\n        return {\n            success: false,\n            status: \"😢 Something went wrong while uploading your tokenURI.\",\n        }\n    }\n    const tokenURI = pinataResponse.pinataUrl;\n\n    // Initiating our contract with web3\n    window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n    //set up your Ethereum transaction\n    const transactionParameters = {\n        to: contractAddress, // Required except during contract publications.\n        from: window.ethereum.selectedAddress, // must match user's active address.\n        'data': window.contract.methods.mintTo(window.ethereum.selectedAddress, tokenURI).encodeABI()//make call to NFT smart contract \n    };\n\n    //sign the transaction via Metamask\n    try {\n        const txHash = await window.ethereum\n            .request({\n                method: 'eth_sendTransaction',\n                params: [transactionParameters],\n            });\n        return {\n            success: true,\n            status: \"✅ Check out your transaction on Etherscan: https://kovan.etherscan.io/tx/\" + txHash\n        }\n    } catch (error) {\n        return {\n            success: false,\n            status: \"😥 Something went wrong: \" + error.message\n        }\n\n    }\n}\n// ---------------------------------------------------------------------------","/home/ayed/Main/Study/PFE/Projet/frontend/src/utils/pinata.js",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/utils/ipfs.js",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/MintNFT.js",["170","171","172","173","174"],"/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/ProfilePage.js",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/LandingPage.js",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/BlockchainSelection.js",["175","176"],"import { React, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { useHistory } from 'react-router-dom';\n// import WalletConnectProvider from \"@walletconnect/web3-provider\";\n// import Web3Modal from \"web3modal\";\nimport { Button, Card, CardHeader } from \"reactstrap\";\nimport Web3 from 'web3';\nimport * as fcl from \"@onflow/fcl\"; // used to call and configure the flow wallet (Blocto)\nimport axios from 'axios';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 900,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst BlockchainSelectionModal = (props) => {\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [isConnected, setIsConnected] = useState(false);\n    const history = useHistory();\n\n    // ------------------ Flow (Blocto) Wallet configuration used later in the authentication process ------------------\n    fcl.config()\n        .put(\"accessNode.api\", \"https://access-testnet.onflow.org\") // connect to Flow testnet\n        .put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/testnet/authn\") // use Blocto testnet wallet\n    // ------------------------------------------------------------------------------------------------------------------\n\n    // ----------- If Polygon is selected as the wanted Blockchain ------------\n    const PolygonSelected = async () => {\n        if (window.ethereum) { // Checking if metamask is installed\n            const provider = window.ethereum; // if yes, checking if the user is connected and getting his account\n            const web3 = new Web3(provider);\n            const accounts = await web3.eth.getAccounts();\n            if (accounts.length < 1) { // if the user is not connected, requesting metamask authentication\n                await provider.request({\n                    method: \"eth_requestAccounts\",\n                });\n                // ------------------- Creating the user and adding it to the database -------------------\n                const userObject = {\n                    walletAddresses: accounts[0]\n                };\n                axios.post('http://localhost:7000/user', userObject).then((res) => {\n                    console.log(res.data)\n                }).catch((error) => {\n                    console.log(error)\n                });\n                // --------------------------- Redirecting the user to the mint nft page ---------------------------------\n                history.push(\"/mint-nft\");\n                setIsConnected(true);\n            } else {\n                history.push(\"/mint-nft\");\n                setIsConnected(true);\n                console.log(accounts[0]);\n            }\n        } else {\n            window.alert('You need to have Metamask installed to continue!');\n        }\n    }\n    // --------------------------------------------------------------------------\n\n    // ----------- If Solana is selected as the wanted Blockchain -----------\n    const SolanaSelected = async () => {\n        // Checking if the user is already connected to Metamask and if yes requesting to disconnect\n        const web3 = new Web3(window.ethereum);\n        const accounts = await web3.eth.getAccounts();\n        if (accounts.length >= 1) {\n            window.alert('You are currently connected to another account, please disconnect from all other wallets to continue!');\n        } else {\n            if (window.solana && window.solana.isPhantom) { // Checking if Phantom is installed\n                // if yes, checking if the user is connected and getting his account\n                const provider = window.solana;\n                const account = await provider.connect();\n                if (account === null) { // if the user is not connected, requesting phantom authentication\n                    const Add = account.publicKey.toString();\n                    const userObject = {\n                        publicAddress: Add\n                    };\n                    history.push(\"/mint-nft\");\n                } else {\n                    history.push(\"/mint-nft\");\n                }\n            } else {\n                window.alert('You need to have Phantom installed to continue!');\n            }\n        }\n    }\n    // --------------------------------------------------------------------------\n\n    // ----------- If Tron is selected as the wanted Blockchain -----------\n    const TronSelected = async () => {\n        // Checking if the user is already connected to Metamask or Phantom and if yes requesting to disconnect\n        const Pol_web3 = new Web3(window.ethereum);\n        const Pol_accounts = await Pol_web3.eth.getAccounts();\n        if (Pol_accounts.length >= 1) {\n            window.alert('You are currently connected to another account, please disconnect from all other wallets to continue!');\n        } else {\n            if (window.tronWeb && window.tronWeb.ready) { // Checking if Tronlink is installed\n                // if yes, checking if the user is connected and getting his account\n                const provider = window.tronWeb;\n                const account = await provider.trx.getAccount(\n                    window.tronWeb.defaultAddress.base58\n                );\n                console.log(account);\n                if (account === false) { // if the user is not connected, requesting tronlink authentication\n                    provider.request({\n                        method: 'tron_requestAccounts'\n                    });\n                    // history.push(\"/mint-nft\");\n                } else {\n                    history.push(\"/mint-nft\");\n                }\n            } else {\n                window.alert('You need to have Tronlink installed to continue!');\n            }\n        }\n    }\n    // --------------------------------------------------------------------------\n\n    // ----------- If Flow is selected as the wanted Blockchain -----------\n    const FlowSelected = async () => {\n        // Checking if the user is already connected to Metamask or Phantom and if yes requesting to disconnect\n        const Pol_web3 = new Web3(window.ethereum);\n        const Pol_accounts = await Pol_web3.eth.getAccounts();\n        if (Pol_accounts.length >= 1) {\n            window.alert('You are currently connected to another account, please disconnect from all other wallets to continue!');\n        }\n        else {\n            const user = await fcl.currentUser().snapshot();\n            if (user.addr === null) {\n                await fcl.authenticate()\n                if (user.addr !== null) {\n                    history.push(\"/mint-nft\");\n                } else {\n                    window.alert('Authentication error!');\n                }\n            }\n            else {\n                history.push(\"/mint-nft\");\n                console.log(user.addr);\n            }\n        }\n    }\n    // --------------------------------------------------------------------------\n\n    // ----------- Disconnecting from any connected wallet -----------\n    // const Disconnect = async () => {\n    //     const poly_provider = window.ethereum;\n    //     const web3 = new Web3(poly_provider);\n    //     const poly_account = await web3.eth.getAccounts();\n    //     const sol_provider = window.solana;\n    //     const sol_account = sol_provider.connect().publicKey.toString();\n    //     const user = await fcl.currentUser().snapshot();\n    //     // Disconnecting from Metamask\n    //     if (poly_account.length > 1) {\n    //         await web3.eth.currentProvider.disconnect();\n    //         setIsConnected(false);\n    //         window.alert(\"You have successfully been disconnected from Metamask!\");\n    //     }\n    //     // Disconnecting from Phantom\n    //     else if (sol_account !== \"\") {\n    //         await sol_provider.disconnect();\n    //         window.alert(\"You have successfully been disconnected from Phantom!\");\n    //         setIsConnected(false);\n    //     }\n    //     // Disconnecting from Tronlink\n    //     // Disconnecting from Blocto\n    //     else if (user.addr !== null) {\n    //         await fcl.unauthenticate();\n    //         window.alert(\"You have successfully been disconnected from Blocto!\");\n    //         setIsConnected(false);\n    //     }\n    //     // If the user is not connected to any wallet\n    //     else {\n    //         window.alert(\"You are not currently connected to any wallet!\");\n    //         setIsConnected(false);\n    //     }\n    // }\n    // ------------------------------------------------------------\n\n    return (\n        <div>\n            <Button onClick={handleOpen} className=\"nav-link d-none d-lg-block\" color=\"secondary\" type=\"button\" style={{ width: 130 }}><i className=\"tim-icons icon-molecule-40\" />Create NFT</Button>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\" >\n                <Box sx={style}>\n                    <Card className=\"bg-secondary shadow border-0\" >\n                        <CardHeader className=\"bg-transparent pb-5\">\n                            <div className=\"text-muted mb-4\">\n                                <h2 style={{ color: \"#304169\" }}>Choose Blockchain\n                                    <h5 style={{ color: \"#6E6E6E\" }}>Choose the most suitable blockchain for your needs. You need to sign in for creation.</h5>\n                                </h2>\n                            </div>\n                            {/* -------------------- Blockchain Cards Section -------------------- */}\n                            <center>\n                                {/* ------------- Polygon Card ------------- */}\n                                <Card className=\"bg-secondary shadow border-0\" style={{ width: \"10rem\", float: \"left\", marginRight: 20, marginLeft: 10 }}>\n                                    <center>\n                                        <img alt=\"...\" src={require(\"../../assets/img/polygon_logo.png\").default} style={{ width: 50, height: 50, marginTop: 20 }} />\n                                        <h4 style={{ color: \"#304169\" }}>Polygon</h4>\n                                        <Button className=\"btn-icon btn-2\" color=\"default\" type=\"button\" style={{ width: 100, marginBottom: 20 }} onClick={PolygonSelected}> Select </Button>\n                                    </center>\n                                </Card>\n                                {/* ------------- Flow Card ------------- */}\n                                <Card className=\"bg-secondary shadow border-0\" style={{ width: \"10rem\", float: \"left\", marginRight: 20 }}>\n                                    <center>\n                                        <img alt=\"...\" src={require(\"../../assets/img/flow_logo.png\").default} style={{ width: 50, height: 50, marginTop: 20 }} />\n                                        <h4 style={{ color: \"#304169\" }}>Flow</h4>\n                                        <Button className=\"btn-icon btn-2\" color=\"default\" type=\"button\" style={{ width: 100, marginBottom: 20 }} onClick={FlowSelected}> Select </Button>\n                                    </center>\n                                </Card>\n                                {/* ------------- Solana Card ------------- */}\n                                <Card className=\"bg-secondary shadow border-0\" style={{ width: \"10rem\", float: \"left\" }}>\n                                    <center>\n                                        <img alt=\"...\" src={require(\"../../assets/img/solana_logo.png\").default} style={{ width: 50, height: 50, marginTop: 20 }} />\n                                        <h4 style={{ color: \"#304169\" }}>Solana</h4>\n                                        <Button className=\"btn-icon btn-2\" color=\"default\" type=\"button\" style={{ width: 100, marginBottom: 20 }} onClick={SolanaSelected}> Select </Button>\n                                    </center>\n                                </Card>\n                                {/* ------------- Tron Card ------------- */}\n                                <Card className=\"bg-secondary shadow border-0\" style={{ width: \"10rem\" }}>\n                                    <center>\n                                        <img alt=\"...\" src={require(\"../../assets/img/tron_logo.png\").default} style={{ width: 50, height: 50, marginTop: 20 }} />\n                                        <h4 style={{ color: \"#304169\" }}>Tron</h4>\n                                        <Button className=\"btn-icon btn-2\" color=\"default\" type=\"button\" style={{ width: 100, marginBottom: 20 }} onClick={TronSelected}> Select </Button>\n                                    </center>\n                                </Card>\n                                {/* ------------- Disconnect Button ------------- */}\n                                {/* {isConnected ? <Button className=\"btn-icon btn-2\" color=\"warning\" type=\"button\" style={{ width: 110, marginBottom: 20 }} onClick={Disconnect}> Disconnect </Button> : <Button className=\"btn-icon btn-2\" color=\"warning\" type=\"button\" style={{ width: 110, marginBottom: 20 }} disabled> Disconnect </Button>} */}\n                            </center>\n                        </CardHeader>\n                    </Card>\n                </Box>\n            </Modal>\n        </div>\n    );\n}\n\nexport default BlockchainSelectionModal;","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/Authenticate.js",["177","178","179"],"import { React, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport AuthForm from \"./AuthenticationForm\";\nimport {\n  Button, Card, CardHeader, DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown\n} from \"reactstrap\";\n\nimport Web3 from 'web3';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst Modals = (props) => {\n\n  // ------ Wallet connection vars ------\n  const [isConnecting, setIsConnecting] = useState(false); //used to check if the user is connecting or not to display different messages\n  const [isConnected, setIsConnected] = useState(false); // we'll use this to check if the user is connected or not\n  const [currentAccount, setCurrentAccount] = useState(null); // We'll use this to get the Metamask connected account\n  const [currentBalance, setCurrentBalance] = useState(0); // We'll use this to get the account balance of the connected user\n  // ------------------------------------\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  // ---------------- For compatibility reasons, we need to check the version of the provider (Metamask) because some browsers still use window.web3 instead of window.ethereum --------------------------\n  const detectProvider = () => {\n    let provider;\n    // ----- Checking Polygon (Ethereum) provider -----\n    if (window.ethereum) {\n      provider = window.ethereum;\n    } else if (window.solana && window.solana.isPhantom) { // ----- Checking Solana provider-----\n      provider = window.solana;\n    } else if (window.tronWeb) {\n      provider = window.tronWeb;\n    } else if (window.web3) { // ----- Checking Web3 general provider-----\n      provider = window.web3.currentProvider;\n    } else { // ----- If no provider is found -----\n      window.alert(\"No wallet browser-extension detected! check out your browser extensions!\");\n    }\n    return provider;\n  }\n  // ---------------------------------------------------------------------------------------------------------------\n\n  // ********************************* Metamask Connection (Once clicked, this function will change the status of the user to Connected!) *********************************\n  const AuthBtnClick = async () => {\n    const provider = detectProvider();\n    // Initalizing web3\n    const web3 = new Web3(provider);\n    if (provider) {\n\n      // ------------------- Cheking if Metamask is installed and detected ------------------- \n      if (provider !== window.ethereum) {\n        console.error(\"Not window.ethereum provider. Do you have multiple wallets installed ?\");\n      }\n\n      setIsConnecting(true);\n      await provider.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      // ------------------- Getting our Metamask account -------------------\n      const accounts = await web3.eth.getAccounts();\n\n      // ------------------- checking if we're actually connected to Metamask -------------------\n      if (accounts.length === 0) {\n        console.log(\"Please make sure you're connected to Metamask!\");\n      } else if (accounts[0] !== currentAccount) {\n        setCurrentAccount(accounts[0]);\n        console.log(\"Account changed to: \" + accounts[0]);\n\n        // ------------------- Getting the current balance -------------------\n        const accBalance = web3.utils.fromWei(\n          await web3.eth.getBalance(accounts[0]),\n          \"ether\"\n        );\n        setCurrentBalance(Number(accBalance).toFixed(6));\n        console.log(\"Balance changed to: \" + accBalance);\n        setIsConnected(true);\n      }\n\n      // ------------------- Creating the user and adding it to the database -------------------\n      // const userObject = {\n      //   publicAddress: accounts[0]\n      // };\n      // axios.post('http://localhost:7000/user', userObject).then((res) => {\n      //   console.log(res.data)\n      // }).catch((error) => {\n      //   console.log(error)\n      // });\n\n      setIsConnecting(false);\n      // props.onLogin(provider);\n    }\n  };\n  // ********************************* End Metamask Connection ******************************************\n\n  return (\n    <div>\n      <Button onClick={handleOpen} className=\"nav-link d-none d-lg-block\" color=\"secondary\" type=\"button\" style={{ width: 110 }}><i className=\"tim-icons icon-wallet-43\" />Connect</Button>\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\" >\n        <Box sx={style}>\n          <Card className=\"bg-secondary shadow border-0\" >\n            <CardHeader className=\"bg-transparent pb-5\">\n              {/* -------------------- Wallet sign in -------------------- */}\n              <div className=\"text-center text-muted mb-4\">\n                <small style={{color:\"#304169\"}}>Sign in via Wallets</small>\n              </div>\n              <center>\n                <UncontrolledDropdown>\n                  <center>\n                    <DropdownToggle caret color=\"default\">\n                      <img alt=\"...\" src={require(\"../../assets/img/wallets.png\").default} style={{ width: 40, height: 40 }} />\n                      Select a wallet\n                    </DropdownToggle>\n                  </center>\n                  <DropdownMenu>\n                    <li>\n                      {/* -------------- Metamask Login btn -------------- */}\n                      <DropdownItem href=\"#pablo\" onClick={AuthBtnClick}>\n                        <img alt=\"...\" src={require(\"../../assets/img/metamask_logo.png\").default} style={{ width: 40, height: 40 }} />\n                        &nbsp;&nbsp; Metamask\n                      </DropdownItem>\n                    </li>\n                    <li>\n                      <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img alt=\"...\" src={require(\"../../assets/img/phantom_logo.png\").default} style={{ width: 40, height: 40 }} />\n                        &nbsp;&nbsp; Phantom\n                      </DropdownItem>\n                    </li>\n                    <li>\n                      <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img alt=\"...\" src={require(\"../../assets/img/tronlink_logo.png\").default} style={{ width: 40, height: 40 }} />\n                        &nbsp;&nbsp; TronLink\n                      </DropdownItem>\n                    </li>\n                    <li>\n                      <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img alt=\"...\" src={require(\"../../assets/img/Blocto_logo.png\").default} style={{ width: 33, height: 40 }} />\n                        &nbsp;&nbsp;&nbsp;&nbsp; Blocto\n                      </DropdownItem>\n                    </li>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </center>\n\n              {/* -------------------- Classic form sign in -------------------- */}\n              <AuthForm />\n\n              {/* -------------------- Social Media sign in -------------------- */}\n              <div className=\"text-muted text-center mt-2 mb-3\">\n                <small style={{color:\"#304169\"}}>Or sign in with</small>\n              </div>\n              <div className=\"btn-wrapper text-center\">\n                <Button className=\"btn-neutral btn-icon\" color=\"default\" href=\"#\" style={{ width: 40, height: 40, background: \"none\" }}>\n                  <span className=\"btn-inner--icon\">\n                    <img alt=\"...\" src={require(\"../../assets/img/github.png\").default} />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button className=\"btn-neutral btn-icon\" color=\"default\" href=\"#\" style={{ width: 40, height: 40, background: \"none\" }}>\n                  <span className=\"btn-inner--icon\">\n                    <img alt=\"...\" src={require(\"../../assets/img/google.png\").default} />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n                <Button className=\"btn-neutral btn-icon\" color=\"default\" href=\"#\" style={{ width: 40, height: 40, background: \"none\" }}>\n                  <span className=\"btn-inner--icon\">\n                    <img alt=\"...\" src={require(\"../../assets/img/twitter.png\").default} />\n                  </span>\n                  <span className=\"btn-inner--text\">Twitter</span>\n                </Button>\n              </div>\n\n            </CardHeader>\n          </Card>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Modals; ","/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/AuthenticationForm.js",[],"/home/ayed/Main/Study/PFE/Projet/frontend/src/components/Navbars/MainNavbar.js",["180","181"],"/home/ayed/Main/Study/PFE/Projet/frontend/src/views/pages/CreateSmartContract.js",["182","183","184"],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":3,"column":132,"nodeType":"191","messageId":"192","endLine":3,"endColumn":141},{"ruleId":"193","severity":1,"message":"194","line":93,"column":64,"nodeType":"195","endLine":93,"endColumn":76},{"ruleId":"185","replacedBy":"196"},{"ruleId":"187","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":19,"column":20,"nodeType":"200","messageId":"201","endLine":19,"endColumn":22},{"ruleId":"198","severity":1,"message":"199","line":19,"column":42,"nodeType":"200","messageId":"201","endLine":19,"endColumn":44},{"ruleId":"198","severity":1,"message":"199","line":19,"column":70,"nodeType":"200","messageId":"201","endLine":19,"endColumn":72},{"ruleId":"202","severity":1,"message":"203","line":27,"column":22,"nodeType":"204","messageId":"205","endLine":27,"endColumn":34},{"ruleId":"189","severity":1,"message":"206","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":65,"column":25,"nodeType":"195","messageId":"209","endLine":65,"endColumn":87,"fix":"210"},{"ruleId":"202","severity":1,"message":"203","line":127,"column":26,"nodeType":"204","messageId":"205","endLine":127,"endColumn":38},{"ruleId":"189","severity":1,"message":"211","line":181,"column":16,"nodeType":"191","messageId":"192","endLine":181,"endColumn":29},{"ruleId":"189","severity":1,"message":"212","line":181,"column":31,"nodeType":"191","messageId":"192","endLine":181,"endColumn":40},{"ruleId":"189","severity":1,"message":"213","line":28,"column":12,"nodeType":"191","messageId":"192","endLine":28,"endColumn":23},{"ruleId":"189","severity":1,"message":"214","line":84,"column":27,"nodeType":"191","messageId":"192","endLine":84,"endColumn":37},{"ruleId":"189","severity":1,"message":"215","line":29,"column":10,"nodeType":"191","messageId":"192","endLine":29,"endColumn":22},{"ruleId":"189","severity":1,"message":"213","line":30,"column":10,"nodeType":"191","messageId":"192","endLine":30,"endColumn":21},{"ruleId":"189","severity":1,"message":"216","line":32,"column":10,"nodeType":"191","messageId":"192","endLine":32,"endColumn":24},{"ruleId":"189","severity":1,"message":"217","line":3,"column":8,"nodeType":"191","messageId":"192","endLine":3,"endColumn":13},{"ruleId":"189","severity":1,"message":"218","line":69,"column":9,"nodeType":"191","messageId":"192","endLine":69,"endColumn":20},{"ruleId":"189","severity":1,"message":"219","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"220","line":79,"column":22,"nodeType":"191","messageId":"192","endLine":79,"endColumn":33},{"ruleId":"189","severity":1,"message":"221","line":80,"column":20,"nodeType":"191","messageId":"192","endLine":80,"endColumn":36},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["222"],["223"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'Select' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"224","text":"225"},"'walletAddress' is assigned a value but never used.","'setWallet' is assigned a value but never used.","'isConnected' is assigned a value but never used.","'userObject' is assigned a value but never used.","'isConnecting' is assigned a value but never used.","'currentBalance' is assigned a value but never used.","'Modal' is defined but never used.","'MintNFTPage' is assigned a value but never used.","'useEffect' is defined but never used.","'setFeatures' is assigned a value but never used.","'setAccessControl' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2677,2677]," rel=\"noreferrer\""]